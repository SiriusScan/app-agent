// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/scan/v1/scan.proto

package scanpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CommandType enumerates the supported command types
type CommandType int32

const (
	CommandType_COMMAND_TYPE_UNSPECIFIED CommandType = 0
	CommandType_COMMAND_TYPE_SCAN        CommandType = 1 // Execute local system scan
	CommandType_COMMAND_TYPE_EXECUTE     CommandType = 2 // Run specified command
	CommandType_COMMAND_TYPE_STATUS      CommandType = 3 // Report agent status
	CommandType_COMMAND_TYPE_UPDATE      CommandType = 4 // Update agent configuration
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "COMMAND_TYPE_UNSPECIFIED",
		1: "COMMAND_TYPE_SCAN",
		2: "COMMAND_TYPE_EXECUTE",
		3: "COMMAND_TYPE_STATUS",
		4: "COMMAND_TYPE_UPDATE",
	}
	CommandType_value = map[string]int32{
		"COMMAND_TYPE_UNSPECIFIED": 0,
		"COMMAND_TYPE_SCAN":        1,
		"COMMAND_TYPE_EXECUTE":     2,
		"COMMAND_TYPE_STATUS":      3,
		"COMMAND_TYPE_UPDATE":      4,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scan_v1_scan_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_proto_scan_v1_scan_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{0}
}

// ConnectRequest represents an agent's connection request
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                              // Unique identifier for the agent
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                                           // Agent's hostname
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`                                                                           // Operating system platform
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional agent metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ConnectRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ConnectRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ConnectRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Command represents a task to be executed by the agent
type Command struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CommandId string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"` // Unique identifier for this command
	Type      CommandType            `protobuf:"varint,2,opt,name=type,proto3,enum=scan.v1.CommandType" json:"type,omitempty"`  // Type of command
	// Types that are valid to be assigned to CommandDetails:
	//
	//	*Command_Scan
	//	*Command_Execute
	//	*Command_Status
	//	*Command_Update
	CommandDetails isCommand_CommandDetails `protobuf_oneof:"command_details"`
	Timeout        int64                    `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"` // Command timeout in seconds
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_COMMAND_TYPE_UNSPECIFIED
}

func (x *Command) GetCommandDetails() isCommand_CommandDetails {
	if x != nil {
		return x.CommandDetails
	}
	return nil
}

func (x *Command) GetScan() *ScanCommand {
	if x != nil {
		if x, ok := x.CommandDetails.(*Command_Scan); ok {
			return x.Scan
		}
	}
	return nil
}

func (x *Command) GetExecute() *ExecuteCommand {
	if x != nil {
		if x, ok := x.CommandDetails.(*Command_Execute); ok {
			return x.Execute
		}
	}
	return nil
}

func (x *Command) GetStatus() *StatusCommand {
	if x != nil {
		if x, ok := x.CommandDetails.(*Command_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *Command) GetUpdate() *UpdateCommand {
	if x != nil {
		if x, ok := x.CommandDetails.(*Command_Update); ok {
			return x.Update
		}
	}
	return nil
}

func (x *Command) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type isCommand_CommandDetails interface {
	isCommand_CommandDetails()
}

type Command_Scan struct {
	Scan *ScanCommand `protobuf:"bytes,3,opt,name=scan,proto3,oneof"` // Details for scan command
}

type Command_Execute struct {
	Execute *ExecuteCommand `protobuf:"bytes,4,opt,name=execute,proto3,oneof"` // Details for execute command
}

type Command_Status struct {
	Status *StatusCommand `protobuf:"bytes,5,opt,name=status,proto3,oneof"` // Details for status command
}

type Command_Update struct {
	Update *UpdateCommand `protobuf:"bytes,6,opt,name=update,proto3,oneof"` // Details for update command
}

func (*Command_Scan) isCommand_CommandDetails() {}

func (*Command_Execute) isCommand_CommandDetails() {}

func (*Command_Status) isCommand_CommandDetails() {}

func (*Command_Update) isCommand_CommandDetails() {}

// ScanCommand contains parameters for a system scan
type ScanCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScanType      string                 `protobuf:"bytes,1,opt,name=scan_type,json=scanType,proto3" json:"scan_type,omitempty"`                                                         // Type of scan to perform
	Targets       []string               `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`                                                                           // Scan targets (paths, ports, etc)
	Options       map[string]string      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Scan-specific options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanCommand) Reset() {
	*x = ScanCommand{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCommand) ProtoMessage() {}

func (x *ScanCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCommand.ProtoReflect.Descriptor instead.
func (*ScanCommand) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{2}
}

func (x *ScanCommand) GetScanType() string {
	if x != nil {
		return x.ScanType
	}
	return ""
}

func (x *ScanCommand) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ScanCommand) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// ExecuteCommand contains parameters for command execution
type ExecuteCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`                                                                   // Command to execute
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`                                                                         // Command arguments
	WorkingDir    string                 `protobuf:"bytes,3,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`                                           // Working directory
	Env           map[string]string      `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Environment variables
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteCommand) Reset() {
	*x = ExecuteCommand{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteCommand) ProtoMessage() {}

func (x *ExecuteCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteCommand.ProtoReflect.Descriptor instead.
func (*ExecuteCommand) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteCommand) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ExecuteCommand) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecuteCommand) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ExecuteCommand) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

// StatusCommand requests agent status information
type StatusCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []string               `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"` // Requested status metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusCommand) Reset() {
	*x = StatusCommand{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCommand) ProtoMessage() {}

func (x *StatusCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCommand.ProtoReflect.Descriptor instead.
func (*StatusCommand) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{4}
}

func (x *StatusCommand) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// UpdateCommand contains agent configuration updates
type UpdateCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Config          map[string]string      `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Configuration key-value pairs
	RestartRequired bool                   `protobuf:"varint,2,opt,name=restart_required,json=restartRequired,proto3" json:"restart_required,omitempty"`                                 // Whether update requires restart
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateCommand) Reset() {
	*x = UpdateCommand{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommand) ProtoMessage() {}

func (x *UpdateCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommand.ProtoReflect.Descriptor instead.
func (*UpdateCommand) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCommand) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateCommand) GetRestartRequired() bool {
	if x != nil {
		return x.RestartRequired
	}
	return false
}

// CommandResult represents the result of a command execution
type CommandResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommandId       string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`                                                        // ID of the command this result is for
	AgentId         string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                              // ID of the agent reporting the result
	ExecutionStatus string                 `protobuf:"bytes,3,opt,name=execution_status,json=executionStatus,proto3" json:"execution_status,omitempty"`                                      // Execution status (success/error)
	Output          string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`                                                                               // Command output or error message
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional result metadata
	Timestamp       int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // Unix timestamp of execution
	// Types that are valid to be assigned to ResultDetails:
	//
	//	*CommandResult_Scan
	//	*CommandResult_Execute
	//	*CommandResult_Status
	//	*CommandResult_Update
	ResultDetails isCommandResult_ResultDetails `protobuf_oneof:"result_details"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResult) Reset() {
	*x = CommandResult{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResult) ProtoMessage() {}

func (x *CommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResult.ProtoReflect.Descriptor instead.
func (*CommandResult) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{6}
}

func (x *CommandResult) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandResult) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CommandResult) GetExecutionStatus() string {
	if x != nil {
		return x.ExecutionStatus
	}
	return ""
}

func (x *CommandResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *CommandResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CommandResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommandResult) GetResultDetails() isCommandResult_ResultDetails {
	if x != nil {
		return x.ResultDetails
	}
	return nil
}

func (x *CommandResult) GetScan() *ScanResult {
	if x != nil {
		if x, ok := x.ResultDetails.(*CommandResult_Scan); ok {
			return x.Scan
		}
	}
	return nil
}

func (x *CommandResult) GetExecute() *ExecuteResult {
	if x != nil {
		if x, ok := x.ResultDetails.(*CommandResult_Execute); ok {
			return x.Execute
		}
	}
	return nil
}

func (x *CommandResult) GetStatus() *StatusResult {
	if x != nil {
		if x, ok := x.ResultDetails.(*CommandResult_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *CommandResult) GetUpdate() *UpdateResult {
	if x != nil {
		if x, ok := x.ResultDetails.(*CommandResult_Update); ok {
			return x.Update
		}
	}
	return nil
}

type isCommandResult_ResultDetails interface {
	isCommandResult_ResultDetails()
}

type CommandResult_Scan struct {
	Scan *ScanResult `protobuf:"bytes,7,opt,name=scan,proto3,oneof"` // Details for scan result
}

type CommandResult_Execute struct {
	Execute *ExecuteResult `protobuf:"bytes,8,opt,name=execute,proto3,oneof"` // Details for execute result
}

type CommandResult_Status struct {
	Status *StatusResult `protobuf:"bytes,9,opt,name=status,proto3,oneof"` // Details for status result
}

type CommandResult_Update struct {
	Update *UpdateResult `protobuf:"bytes,10,opt,name=update,proto3,oneof"` // Details for update result
}

func (*CommandResult_Scan) isCommandResult_ResultDetails() {}

func (*CommandResult_Execute) isCommandResult_ResultDetails() {}

func (*CommandResult_Status) isCommandResult_ResultDetails() {}

func (*CommandResult_Update) isCommandResult_ResultDetails() {}

// ScanResult contains scan-specific result data
type ScanResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Findings      []*Finding             `protobuf:"bytes,1,rep,name=findings,proto3" json:"findings,omitempty"`           // Scan findings
	ScanId        string                 `protobuf:"bytes,2,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"` // Unique scan identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResult) Reset() {
	*x = ScanResult{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResult) ProtoMessage() {}

func (x *ScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResult.ProtoReflect.Descriptor instead.
func (*ScanResult) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{7}
}

func (x *ScanResult) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *ScanResult) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

// Finding represents a single scan finding
type Finding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Finding identifier
	Severity      string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`                                                                         // Finding severity
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                   // Finding description
	Details       map[string]string      `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional finding details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{8}
}

func (x *Finding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Finding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Finding) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// ExecuteResult contains command execution details
type ExecuteResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitCode      int32                  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`       // Command exit code
	Stdout        string                 `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`                            // Standard output
	Stderr        string                 `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`                            // Standard error
	DurationMs    int64                  `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"` // Execution duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResult) Reset() {
	*x = ExecuteResult{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResult) ProtoMessage() {}

func (x *ExecuteResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResult.ProtoReflect.Descriptor instead.
func (*ExecuteResult) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteResult) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ExecuteResult) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecuteResult) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecuteResult) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// StatusResult contains agent status information
type StatusResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       map[string]string      `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Status metrics
	System        *SystemInfo            `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`                                                                             // System information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResult) Reset() {
	*x = StatusResult{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResult) ProtoMessage() {}

func (x *StatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResult.ProtoReflect.Descriptor instead.
func (*StatusResult) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{10}
}

func (x *StatusResult) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *StatusResult) GetSystem() *SystemInfo {
	if x != nil {
		return x.System
	}
	return nil
}

// SystemInfo contains detailed system information
type SystemInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OsVersion     string                 `protobuf:"bytes,1,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`                                                  // Operating system version
	Uptime        int64                  `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`                                                                        // System uptime in seconds
	MemoryTotal   int64                  `protobuf:"varint,3,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`                                           // Total memory in bytes
	MemoryFree    int64                  `protobuf:"varint,4,opt,name=memory_free,json=memoryFree,proto3" json:"memory_free,omitempty"`                                              // Free memory in bytes
	CpuUsage      float32                `protobuf:"fixed32,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                                                   // CPU usage percentage
	Extra         map[string]string      `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional system information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemInfo) Reset() {
	*x = SystemInfo{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfo) ProtoMessage() {}

func (x *SystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfo.ProtoReflect.Descriptor instead.
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{11}
}

func (x *SystemInfo) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *SystemInfo) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *SystemInfo) GetMemoryTotal() int64 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *SystemInfo) GetMemoryFree() int64 {
	if x != nil {
		return x.MemoryFree
	}
	return 0
}

func (x *SystemInfo) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *SystemInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// UpdateResult contains configuration update results
type UpdateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Update success status
	Updated       []string               `protobuf:"bytes,2,rep,name=updated,proto3" json:"updated,omitempty"`  // List of updated configurations
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`      // Error message if update failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResult) Reset() {
	*x = UpdateResult{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResult) ProtoMessage() {}

func (x *UpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResult.ProtoReflect.Descriptor instead.
func (*UpdateResult) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateResult) GetUpdated() []string {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UpdateResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// CommandAck acknowledges receipt of a command result
type CommandAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"` // ID of the acknowledged command
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                        // Acknowledgment status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandAck) Reset() {
	*x = CommandAck{}
	mi := &file_proto_scan_v1_scan_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAck) ProtoMessage() {}

func (x *CommandAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scan_v1_scan_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAck.ProtoReflect.Descriptor instead.
func (*CommandAck) Descriptor() ([]byte, []int) {
	return file_proto_scan_v1_scan_proto_rawDescGZIP(), []int{13}
}

func (x *CommandAck) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandAck) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_scan_v1_scan_proto protoreflect.FileDescriptor

const file_proto_scan_v1_scan_proto_rawDesc = "" +
	"\n" +
	"\x18proto/scan/v1/scan.proto\x12\ascan.v1\"\xe3\x01\n" +
	"\x0eConnectRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12A\n" +
	"\bmetadata\x18\x04 \x03(\v2%.scan.v1.ConnectRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x02\n" +
	"\aCommand\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.scan.v1.CommandTypeR\x04type\x12*\n" +
	"\x04scan\x18\x03 \x01(\v2\x14.scan.v1.ScanCommandH\x00R\x04scan\x123\n" +
	"\aexecute\x18\x04 \x01(\v2\x17.scan.v1.ExecuteCommandH\x00R\aexecute\x120\n" +
	"\x06status\x18\x05 \x01(\v2\x16.scan.v1.StatusCommandH\x00R\x06status\x120\n" +
	"\x06update\x18\x06 \x01(\v2\x16.scan.v1.UpdateCommandH\x00R\x06update\x12\x18\n" +
	"\atimeout\x18\a \x01(\x03R\atimeoutB\x11\n" +
	"\x0fcommand_details\"\xbd\x01\n" +
	"\vScanCommand\x12\x1b\n" +
	"\tscan_type\x18\x01 \x01(\tR\bscanType\x12\x18\n" +
	"\atargets\x18\x02 \x03(\tR\atargets\x12;\n" +
	"\aoptions\x18\x03 \x03(\v2!.scan.v1.ScanCommand.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcb\x01\n" +
	"\x0eExecuteCommand\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x12\x1f\n" +
	"\vworking_dir\x18\x03 \x01(\tR\n" +
	"workingDir\x122\n" +
	"\x03env\x18\x04 \x03(\v2 .scan.v1.ExecuteCommand.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\rStatusCommand\x12\x18\n" +
	"\ametrics\x18\x01 \x03(\tR\ametrics\"\xb1\x01\n" +
	"\rUpdateCommand\x12:\n" +
	"\x06config\x18\x01 \x03(\v2\".scan.v1.UpdateCommand.ConfigEntryR\x06config\x12)\n" +
	"\x10restart_required\x18\x02 \x01(\bR\x0frestartRequired\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfc\x03\n" +
	"\rCommandResult\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12)\n" +
	"\x10execution_status\x18\x03 \x01(\tR\x0fexecutionStatus\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\x12@\n" +
	"\bmetadata\x18\x05 \x03(\v2$.scan.v1.CommandResult.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12)\n" +
	"\x04scan\x18\a \x01(\v2\x13.scan.v1.ScanResultH\x00R\x04scan\x122\n" +
	"\aexecute\x18\b \x01(\v2\x16.scan.v1.ExecuteResultH\x00R\aexecute\x12/\n" +
	"\x06status\x18\t \x01(\v2\x15.scan.v1.StatusResultH\x00R\x06status\x12/\n" +
	"\x06update\x18\n" +
	" \x01(\v2\x15.scan.v1.UpdateResultH\x00R\x06update\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x10\n" +
	"\x0eresult_details\"S\n" +
	"\n" +
	"ScanResult\x12,\n" +
	"\bfindings\x18\x01 \x03(\v2\x10.scan.v1.FindingR\bfindings\x12\x17\n" +
	"\ascan_id\x18\x02 \x01(\tR\x06scanId\"\xcc\x01\n" +
	"\aFinding\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x127\n" +
	"\adetails\x18\x04 \x03(\v2\x1d.scan.v1.Finding.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\rExecuteResult\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06stdout\x18\x02 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x03 \x01(\tR\x06stderr\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\"\xb5\x01\n" +
	"\fStatusResult\x12<\n" +
	"\ametrics\x18\x01 \x03(\v2\".scan.v1.StatusResult.MetricsEntryR\ametrics\x12+\n" +
	"\x06system\x18\x02 \x01(\v2\x13.scan.v1.SystemInfoR\x06system\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x02\n" +
	"\n" +
	"SystemInfo\x12\x1d\n" +
	"\n" +
	"os_version\x18\x01 \x01(\tR\tosVersion\x12\x16\n" +
	"\x06uptime\x18\x02 \x01(\x03R\x06uptime\x12!\n" +
	"\fmemory_total\x18\x03 \x01(\x03R\vmemoryTotal\x12\x1f\n" +
	"\vmemory_free\x18\x04 \x01(\x03R\n" +
	"memoryFree\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\x02R\bcpuUsage\x124\n" +
	"\x05extra\x18\x06 \x03(\v2\x1e.scan.v1.SystemInfo.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\fUpdateResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\aupdated\x18\x02 \x03(\tR\aupdated\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"C\n" +
	"\n" +
	"CommandAck\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status*\x8e\x01\n" +
	"\vCommandType\x12\x1c\n" +
	"\x18COMMAND_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11COMMAND_TYPE_SCAN\x10\x01\x12\x18\n" +
	"\x14COMMAND_TYPE_EXECUTE\x10\x02\x12\x17\n" +
	"\x13COMMAND_TYPE_STATUS\x10\x03\x12\x17\n" +
	"\x13COMMAND_TYPE_UPDATE\x10\x042\x87\x01\n" +
	"\fAgentService\x128\n" +
	"\aConnect\x12\x17.scan.v1.ConnectRequest\x1a\x10.scan.v1.Command\"\x000\x01\x12=\n" +
	"\fReportResult\x12\x16.scan.v1.CommandResult\x1a\x13.scan.v1.CommandAck\"\x00B6Z4github.com/SiriusScan/app-agent/proto/scan/v1;scanpbb\x06proto3"

var (
	file_proto_scan_v1_scan_proto_rawDescOnce sync.Once
	file_proto_scan_v1_scan_proto_rawDescData []byte
)

func file_proto_scan_v1_scan_proto_rawDescGZIP() []byte {
	file_proto_scan_v1_scan_proto_rawDescOnce.Do(func() {
		file_proto_scan_v1_scan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scan_v1_scan_proto_rawDesc), len(file_proto_scan_v1_scan_proto_rawDesc)))
	})
	return file_proto_scan_v1_scan_proto_rawDescData
}

var file_proto_scan_v1_scan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_scan_v1_scan_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_scan_v1_scan_proto_goTypes = []any{
	(CommandType)(0),       // 0: scan.v1.CommandType
	(*ConnectRequest)(nil), // 1: scan.v1.ConnectRequest
	(*Command)(nil),        // 2: scan.v1.Command
	(*ScanCommand)(nil),    // 3: scan.v1.ScanCommand
	(*ExecuteCommand)(nil), // 4: scan.v1.ExecuteCommand
	(*StatusCommand)(nil),  // 5: scan.v1.StatusCommand
	(*UpdateCommand)(nil),  // 6: scan.v1.UpdateCommand
	(*CommandResult)(nil),  // 7: scan.v1.CommandResult
	(*ScanResult)(nil),     // 8: scan.v1.ScanResult
	(*Finding)(nil),        // 9: scan.v1.Finding
	(*ExecuteResult)(nil),  // 10: scan.v1.ExecuteResult
	(*StatusResult)(nil),   // 11: scan.v1.StatusResult
	(*SystemInfo)(nil),     // 12: scan.v1.SystemInfo
	(*UpdateResult)(nil),   // 13: scan.v1.UpdateResult
	(*CommandAck)(nil),     // 14: scan.v1.CommandAck
	nil,                    // 15: scan.v1.ConnectRequest.MetadataEntry
	nil,                    // 16: scan.v1.ScanCommand.OptionsEntry
	nil,                    // 17: scan.v1.ExecuteCommand.EnvEntry
	nil,                    // 18: scan.v1.UpdateCommand.ConfigEntry
	nil,                    // 19: scan.v1.CommandResult.MetadataEntry
	nil,                    // 20: scan.v1.Finding.DetailsEntry
	nil,                    // 21: scan.v1.StatusResult.MetricsEntry
	nil,                    // 22: scan.v1.SystemInfo.ExtraEntry
}
var file_proto_scan_v1_scan_proto_depIdxs = []int32{
	15, // 0: scan.v1.ConnectRequest.metadata:type_name -> scan.v1.ConnectRequest.MetadataEntry
	0,  // 1: scan.v1.Command.type:type_name -> scan.v1.CommandType
	3,  // 2: scan.v1.Command.scan:type_name -> scan.v1.ScanCommand
	4,  // 3: scan.v1.Command.execute:type_name -> scan.v1.ExecuteCommand
	5,  // 4: scan.v1.Command.status:type_name -> scan.v1.StatusCommand
	6,  // 5: scan.v1.Command.update:type_name -> scan.v1.UpdateCommand
	16, // 6: scan.v1.ScanCommand.options:type_name -> scan.v1.ScanCommand.OptionsEntry
	17, // 7: scan.v1.ExecuteCommand.env:type_name -> scan.v1.ExecuteCommand.EnvEntry
	18, // 8: scan.v1.UpdateCommand.config:type_name -> scan.v1.UpdateCommand.ConfigEntry
	19, // 9: scan.v1.CommandResult.metadata:type_name -> scan.v1.CommandResult.MetadataEntry
	8,  // 10: scan.v1.CommandResult.scan:type_name -> scan.v1.ScanResult
	10, // 11: scan.v1.CommandResult.execute:type_name -> scan.v1.ExecuteResult
	11, // 12: scan.v1.CommandResult.status:type_name -> scan.v1.StatusResult
	13, // 13: scan.v1.CommandResult.update:type_name -> scan.v1.UpdateResult
	9,  // 14: scan.v1.ScanResult.findings:type_name -> scan.v1.Finding
	20, // 15: scan.v1.Finding.details:type_name -> scan.v1.Finding.DetailsEntry
	21, // 16: scan.v1.StatusResult.metrics:type_name -> scan.v1.StatusResult.MetricsEntry
	12, // 17: scan.v1.StatusResult.system:type_name -> scan.v1.SystemInfo
	22, // 18: scan.v1.SystemInfo.extra:type_name -> scan.v1.SystemInfo.ExtraEntry
	1,  // 19: scan.v1.AgentService.Connect:input_type -> scan.v1.ConnectRequest
	7,  // 20: scan.v1.AgentService.ReportResult:input_type -> scan.v1.CommandResult
	2,  // 21: scan.v1.AgentService.Connect:output_type -> scan.v1.Command
	14, // 22: scan.v1.AgentService.ReportResult:output_type -> scan.v1.CommandAck
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_scan_v1_scan_proto_init() }
func file_proto_scan_v1_scan_proto_init() {
	if File_proto_scan_v1_scan_proto != nil {
		return
	}
	file_proto_scan_v1_scan_proto_msgTypes[1].OneofWrappers = []any{
		(*Command_Scan)(nil),
		(*Command_Execute)(nil),
		(*Command_Status)(nil),
		(*Command_Update)(nil),
	}
	file_proto_scan_v1_scan_proto_msgTypes[6].OneofWrappers = []any{
		(*CommandResult_Scan)(nil),
		(*CommandResult_Execute)(nil),
		(*CommandResult_Status)(nil),
		(*CommandResult_Update)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scan_v1_scan_proto_rawDesc), len(file_proto_scan_v1_scan_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_scan_v1_scan_proto_goTypes,
		DependencyIndexes: file_proto_scan_v1_scan_proto_depIdxs,
		EnumInfos:         file_proto_scan_v1_scan_proto_enumTypes,
		MessageInfos:      file_proto_scan_v1_scan_proto_msgTypes,
	}.Build()
	File_proto_scan_v1_scan_proto = out.File
	file_proto_scan_v1_scan_proto_goTypes = nil
	file_proto_scan_v1_scan_proto_depIdxs = nil
}
