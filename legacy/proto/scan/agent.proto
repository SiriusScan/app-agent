syntax = "proto3";

package scan;

option go_package = "github.com/SiriusScan/app-agent/proto/scan";

service AgentService {
    // Simple hello world RPC to verify connection
    rpc Ping(PingRequest) returns (PingResponse);
    
    // Bidirectional streaming RPC for agent communication
    rpc Connect(stream AgentMessage) returns (stream CommandMessage);
}

// Simple ping request
message PingRequest {
    string agent_id = 1;
}

// Simple ping response
message PingResponse {
    string message = 1;
    int64 timestamp = 2;
}

// Agent status values
enum AgentStatus {
    UNKNOWN = 0;
    IDLE = 1;
    BUSY = 2;
    ERROR = 3;
    MAINTENANCE = 4;
}

// Message sent from agent to server
message AgentMessage {
    string agent_id = 1;
    AgentStatus status = 2;
    oneof payload {
        HeartbeatMessage heartbeat = 3;
        CommandResult command_result = 4;
    }
    map<string, string> metadata = 5;
}

// Message sent from server to agent
message CommandMessage {
    string id = 1;
    string type = 2;
    map<string, string> params = 3;
    int64 timeout_seconds = 4;
}

// Heartbeat message
message HeartbeatMessage {
    int64 timestamp = 1;
    double cpu_usage = 2;
    double memory_usage = 3;
    int32 active_commands = 4;
}

// Command result message
message CommandResult {
    string command_id = 1;
    string status = 2;
    map<string, string> data = 3;
    string error = 4;
    int64 completed_at = 5;
} 